import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  userInfo: localStorage.getItem("userInfo")
    ? JSON.parse(localStorage.getItem("userInfo"))
    : null,
};

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    setCredentials: (state, action) => {
      state.userInfo = action.payload;
      localStorage.setItem("userInfo", JSON.stringify(action.payload));

      const expirationTime = new Date().getTime() + 30 * 24 * 60 * 60 * 1000; // 30 days
      localStorage.setItem("expirationTime", expirationTime);
    },
    logout: (state) => {
      (state.userInfo = null), localStorage.clear();
    },
  },
});
export const { setCredentials, logout } = authSlice.actions;
export default authSlice.reducer;

// /*
// 1. Initial State: The initialState object contains the initial structure of the state managed by this slice.
//                   It attempts to retrieve user information from localStorage and parses it as JSON.
//                   If there is no user information in localStorage, the userInfo property is set to null.
// 2. authSlice: ->The "createSlice" function is used to define a slice of the Redux state. It takes an object with properties like name, initialState, and reducers.
//               ->"name" is the name of the slice (in this case, "auth").
//               ->"initialState" is the initial state for the slice.
//               ->"reducers" is an object containing reducer functions. Reducers are functions that handle state transitions based on dispatched actions.
// 3. Reducers:
// Two reducers are defined: setCredentials and logout.
//    -> "setCredentials" updates the userInfo property in the state with the payload from the action.
//    -> It also updates the user information and sets an expiration time in localStorage.
//     "logout" clears the userInfo property in the state and clears all data in localStorage.
//     Action Creators:

// The authSlice.actions object includes the action creators generated by createSlice.
// In this case, setCredentials and logout are extracted and exported.

// Reducer Export:
// The generated reducer function is exported as the default export.
// This reducer can be combined with other reducers to create the root reducer of your Redux store.

// */
